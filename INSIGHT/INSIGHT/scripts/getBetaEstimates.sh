# bash script for running INSIGHT-EM on flank polymorphism input files
# to obtain estimates of beta1, beta2, and beta3
#
# usage: bash scripts/getBetaEstimates.sh <flankPolySummaryFile> <freqThreshold> <logFile>
#
# * flankPolySummaryFile - summary file for polymorphic flanking site used when estimating beta (generated by processElementBed/processElements.sh script)
# * freqThreshold        - frequency threshold (in %) used in distinguishing 'L' and 'H' sites
# * logFile              - name of file for logging INSIGHT-EM output (appends existing file)
#
# ==> progress is logged onto stdout.
#     successful completion is indicated by last log line being 'Done.'

set -e
set -o pipefail

# path to executable
INSIGHT_EM=./bin/INSIGHT-EM-v1.1
# global options
INSIGHT_EM_OPTIONS="-v -i 100000"

flankPolySummaryFile=$1
freqThreshold=$2
logFile=$3

scriptDir=./scripts


echo '=================================================================='
echo '  Estimating beta1, beta2, and beta3 for freq threshold '$freqThreshold' on file '$flankPolySummaryFile
echo '=================================================================='

flankInputFile=${flankPolySummaryFile}.f${freqThreshold}

##############  -1- APPLY FREQ THRESHOLD TO INPUT FILE ###############################

echo '1.  applying frequency threshold to input file'
   bash $scriptDir/labelLHsites.sh   $flankPolySummaryFile   $flankInputFile   $freqThreshold

##############  -2- ESTIMATE BETA2 ###############################

echo '2.  estimating beta2 from L and H counts in flankPoly file'
   beta2=` \
   cat $flankInputFile | \
      awk \
      'BEGIN{Lcount=0; Hcount=0;} \
       { \
         if($1=="site" && $3=="L") { Lcount++; } \
         else if($1=="site" && $3=="H") { Hcount++; } \
       } \
       END{if(Hcount>0){print Hcount/(Lcount+Hcount);} else print 0; }' \
   `
   echo '    beta2 = '$beta2
   if [ $beta2 == 0 ]
   then
      echo '   Warning: beta2 estimated to be 0. No H sites in flank file.'
      echo '   Aborting. See flank input file in '$flankInputFile'.'
      exit 1
   fi

##############  -3- ESTIMATE BETA1 and BETA3 ###############################

echo '3.  estimating beta1 and beta3 by applying INSIGHT-EM to flank input file'
   # run INSIGHT-EM and log
   tmpLogFile=$logFile.beta
   cmd=$INSIGHT_EM" "$INSIGHT_EM_OPTIONS" -b "$flankInputFile
   echo '    Invoking  '$cmd
   set +e
   $cmd   &>   $tmpLogFile
   if [ $? -ne 0 ]
   then
      echo '    ==> Error when executing INSIGHT-EM to compute beta1 and beta3 parameters.'
      echo '    ==> Command used: '$cmd
      echo '    ==> See output log file '$tmpLogFile
      exit 1
   fi
   set -e
   bash $scriptDir/getEMstatus.sh   $tmpLogFile   $cmd
   echo -e "thres-"$freqThreshold"-beta\tCommandline: "$cmd >> $logFile   
   cat $tmpLogFile  |  awk -v OFS="\t" -v thres=$freqThreshold '{print "thres-"thres"-beta",$0}'   >>   $logFile


##############  -4- GETTING BETA LINE ###############################

echo '4.  getting beta line'
   betaLine=` \
      cat $tmpLogFile | grep "Estimates:" | \
      awk -v OFS="\t" -v beta2=$beta2 \
         '{ \
            beta1 = (1-beta2)*$NF; \
            beta3 = 1 - beta1 - beta2; \
            print "beta",beta1,beta2,beta3; \
         }' `
   echo '    Beta line: '$betaLine
   echo -e "thres-"$freqThreshold"-beta\tBeta Line: "$betaLine >> $logFile   

##############  -5- CLEAN UP ###############################

   rm $tmpLogFile
   rm $flankInputFile

echo 'Done.'

